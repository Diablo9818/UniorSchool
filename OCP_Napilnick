using System;
using System.Collections.Generic;

namespace IMJunior
{
    class Program
    {
        static void Main(string[] args)
        {
            var orderForm = new OrderForm(new Dictionary<string, IPaymentSystemFactory>()
            {
                {"Qiwi", new QiwiPaymentFactory() },
                { "WebMoney", new WebMoneyPaymentFactory()},
                {"Card", new CardPaymentFactory() }
            });

            var paymentSystemFactory = orderForm.ShowForm();

            var paymentHandler = new PaymentHandler(paymentSystemFactory);
            paymentHandler.ProcessPayment();
            paymentHandler.ShowPaymentResult();
        }
    }

    public interface IPaymentSystem
    {
       public string Id { get; }

        public void ProcessPayment();
    }

    public interface IPaymentSystemFactory
    {
        public IPaymentSystem Create();
    }

    public class QiwiPaymentSystem : IPaymentSystem
    {
        public string Id { get;} = "QIWI";

        public void ProcessPayment()
        {
            Console.WriteLine("Перевод на страницу QIWI...");
            Console.WriteLine("Проверка платежа через QIWI...");
        }
    }

    public class WebMoneyPaymentSystem : IPaymentSystem
    {
        public string Id { get; } = "WebMoney";

        public void ProcessPayment()
        {
            Console.WriteLine("Вызов API WebMoney...");
            Console.WriteLine("Проверка платежа через WebMoney...");
        }
    }

    public class CardPaymentSystem : IPaymentSystem
    {
        public string Id { get;} = "Card";

        public void ProcessPayment()
        {
            Console.WriteLine("Вызов API банка эмитера карты Card...");
            Console.WriteLine("Проверка платежа через Card...");
        }
    }

    public class QiwiPaymentFactory: IPaymentSystemFactory
    {
        public IPaymentSystem Create()
        {
            return new QiwiPaymentSystem();
        }
    }

    public class WebMoneyPaymentFactory : IPaymentSystemFactory
    {
        public IPaymentSystem Create()
        {
            return new WebMoneyPaymentSystem();
        }
    }

    public class CardPaymentFactory : IPaymentSystemFactory
    {
        public IPaymentSystem Create()
        {
            return new CardPaymentSystem();
        }
    }

    public class OrderForm
    {
        private readonly IReadOnlyDictionary<string, IPaymentSystemFactory> _paymentSystemFactories;

        public OrderForm(IReadOnlyDictionary<string, IPaymentSystemFactory> paymentSystemFactories)
        {
            _paymentSystemFactories = paymentSystemFactories;
        }

        public IPaymentSystemFactory ShowForm()
        {
            Console.WriteLine($"Мы принимаем:{string.Join(", ", _paymentSystemFactories.Keys)}");

            IPaymentSystemFactory paymentSystemFactory = null;

            do
            {
                //симуляция веб интерфейса
                Console.WriteLine("Какой системой вы хотите совершить оплату?");
                var systemId = Console.ReadLine();

                if (_paymentSystemFactories.ContainsKey(systemId))
                {
                    paymentSystemFactory = _paymentSystemFactories[systemId];
                }
                else
                {
                    Console.WriteLine("Выбранная платежная система не поддерживается. Пожалуйста, выберите из предложенных.");
                }
            }
            while (paymentSystemFactory == null);

            return paymentSystemFactory;
        }
    }

    public class PaymentHandler
    {
        private IPaymentSystem _paymentSystem;

        public PaymentHandler(IPaymentSystemFactory paymentSystemFactory)
        {
            _paymentSystem = paymentSystemFactory?.Create() ?? throw new InvalidCastException();
        }

        public void ProcessPayment()
        {
            _paymentSystem.ProcessPayment();
        }

        public void ShowPaymentResult()
        {
            Console.WriteLine($"Вы оплатили с помощью {_paymentSystem.SystemId}");
            Console.WriteLine("Оплата прошла успешно!");
        }
    }
}
