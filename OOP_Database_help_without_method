using System;
using System.Collections.Generic;

namespace ConsoleApp56
{
    class Program
    {
        static void Main(string[] args)
        {
            const int ShowPlayers = 1;
            const int AddPlayer = 2;
            const int BlockPlayer = 3;
            const int UnblockPlayer = 4;
            const int DeletePlayer = 5;
            const int ExitProgram = 6;

            string menu = $"{ShowPlayers} - Вывеси список игроков. \n{AddPlayer} - Добавить игрока. \n{BlockPlayer} - Заблокировать игрока.\n{UnblockPlayer} - Разблокировать игрока.\n{DeletePlayer} - Удалить игрока. \n{ExitProgram} - Выход";
            bool isWork = true;
            DataBase dataBase = new DataBase();

            while (isWork)
            {
                Console.WriteLine("Список команд:");
                Console.WriteLine(menu);
                Console.Write("\nВведите команду:");
                int userInputCommand;
                bool isCorrect = int.TryParse(Console.ReadLine(), out userInputCommand);

                if (isCorrect)
                {
                    switch (userInputCommand)
                    {
                        case ShowPlayers:
                            dataBase.ShowDataBase();
                            break;
                        case AddPlayer:
                            dataBase.AddPlayer();
                            break;
                        case BlockPlayer:
                            dataBase.LockPlayer();
                            break;
                        case UnblockPlayer:
                            dataBase.UnlockPlayer();
                            break;
                        case DeletePlayer:
                            dataBase.DeletePlayer();
                            break;
                        case ExitProgram:
                            isWork = false;
                            break;
                        default:
                            Console.WriteLine("Неправильно введена команда.");
                            break;

                    }
                }

                Console.ReadKey();
                Console.Clear();
            }

        }
    }

    class Player
    {
        public string PlayerNick { get; private set; }
        public int PlayerID { get; private set; }
        public int PlayerLevel { get; private set; }
        public bool IsBanned { get; private set; }

        public Player(string playerNick, int playerID, int playerLevel, bool isBanned )
        {
            PlayerNick = playerNick;
            PlayerID = playerID;
            PlayerLevel = playerLevel;
            IsBanned = isBanned;
        }

        public void Ban()
        {
            IsBanned = true;
        }
        
        public void UnBan()
        {
            IsBanned = false;
        }
        public void ShowPlayerInfo()
        {
            string status;

            if(IsBanned == true)
            {
                status = "Забанен";
            }
            else
            {
                status = "Разбанен";
            }
            Console.WriteLine($"Номер игрока:{PlayerID}, имя игрока:{PlayerNick}, уровень игрока:{PlayerLevel}, статус игрока:{status}.");
        }
    }

    class DataBase
    {
        private List<Player> _players = new List<Player>();

        public void ShowDataBase()
        {
            if(_players.Count > 0)
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    _players[i].ShowPlayerInfo();
                }
            }
            else
            {
                Console.WriteLine("В базе данных нет ни одного игрока.");
            }
        }
        public void AddPlayer()
        {
            Console.Write("Введите номер игрока:");
            int playerID;
            bool isCorrectID = int.TryParse(Console.ReadLine(), out playerID);

            if (isCorrectID == false)
            {
                Console.WriteLine("Некорректный номер.");
            }

            Console.Write("Введите имя игрока: ");
            string playerName = Console.ReadLine();

            Console.Write("Введите уровень игрока: ");
            int playerLevel;
            bool isCorrectLevel = int.TryParse(Console.ReadLine(), out playerLevel);

            if(isCorrectLevel == false)
            {
                Console.WriteLine("Некорректный номер.");
            }

            Console.Write("Забанен ли игрок?");
            bool isBanned = Convert.ToBoolean(Console.ReadLine());

            _players.Add(new Player(playerName, playerID, playerLevel, isBanned));

        }

        public void LockPlayer()
        {
            ShowDataBase();
            Console.Write("\nВведите номер игрока, которого надо заблокировать:");
            int blockNumber;
            bool isCorrectBlockNumber = int.TryParse(Console.ReadLine(), out blockNumber);

            if (isCorrectBlockNumber)
            {
                foreach (var player in _players)
                {
                    if(player.PlayerID == blockNumber && player.IsBanned == false)
                    {
                        player.Ban();
                    }
                    else
                    {
                        Console.WriteLine("Такого игрока тут нет.");
                    }
                }
            }
            else
            {
                Console.WriteLine("Некорректный номер.");
            }
        }

        public void UnlockPlayer()
        {
            ShowDataBase();
            Console.Write("\nВведите номер игрока, которого надо разблокировать:");
            int blockNumber;
            bool isCorrectBlockNumber = int.TryParse(Console.ReadLine(), out blockNumber);

            if (isCorrectBlockNumber)
            {
                foreach (var player in _players)
                {
                    if (player.PlayerID == blockNumber && player.IsBanned == true)
                    {
                        player.UnBan();
                    }
                    else
                    {
                        Console.WriteLine("Такого игрока тут нет.");
                    }
                }
            }
            else
            {
                Console.WriteLine("Некорректный номер.");
            }
        }

        public void DeletePlayer()
        {
            ShowDataBase();

            Console.Write("Введите номер игрока, которого вы хотите удалить:");

            int playerDeleteNumber;
            bool isCorrectNumber = int.TryParse(Console.ReadLine(), out playerDeleteNumber);

            if (isCorrectNumber)
            {
                foreach (var player in _players)
                {
                    if(player.PlayerID == playerDeleteNumber)
                    {
                        _players.RemoveAt(playerDeleteNumber);
                    }
                    else
                    {
                        Console.WriteLine("Такого игрока тут нет.");
                    }
                }
            }
            else
            {
                Console.WriteLine("Некорректный номер.");
            }
        }

    }
}
