using System;
using System.Collections.Generic;

namespace Shop
{
    class Program
    {
        static void Main(string[] args)
        {
            int money = 1430;
            Seller seller = new Seller();
            Customer customer = new Customer(money);
            seller.GetProducts();
            seller.Work(customer);
        }
    }

    class Human
    {
        protected List<Product> _products = new List<Product>();

        public int Money { get; protected set; }

        public Human()
        {

        }

        public Human(int money)
        {
            Money = money;
        }

        public void ShowDealerInfo()
        {
            foreach (Product product in _products)
            {
                product.ShowInfoForDealer();
            }
        }

        public void ShowBuyerInfo()
        {
            foreach (Product product in _products)
            {
                product.ShowInfoForBuyer();
            }
        }
    }

    class Seller: Human
    {
        public Seller(int money = 0)
        {
            Money = money;
        }

        public void Work(Customer customer)
        {
            const string ShowGoodsCommand = "1";
            const string SellGoodsCommand = "2";
            const string LookWhatYouBought = "3";
            const string Exit = "4";

            string menu = $"{ShowGoodsCommand} - показать доступные товары. \n{SellGoodsCommand} - купить товар. \n{LookWhatYouBought} - посмотреть свою корзину. \n{Exit} - выйти.";
            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine("Список команд:");
                Console.WriteLine(menu);
                Console.Write("\nВведите команду:");
                string userInputCommand = Console.ReadLine();

                switch (userInputCommand)
                {
                    case ShowGoodsCommand:
                        ShowDealerInfo();
                        break;
                    case SellGoodsCommand:
                        Sell(customer);
                        break;
                    case LookWhatYouBought:
                        customer.ShowBuyerInfo();
                        break;
                    case Exit:
                        isWork = false;
                        break;
                    default:
                        Console.WriteLine("Неправильно введена команда.");
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        public void GetProducts()
        {
            string[] names =  new string[] { "Плескавица", "Чевапи", "Пиво", "Пельмени", "Колбаса", "Ролтон" };
            Random random = new Random();
            int lowPrice = 100;
            int highPrice = 200;

            for (int i = 0; i < names.Length; i++)
            {
                _products.Add(new Product(names[i],random.Next(lowPrice,highPrice)));
            }
        }

        public void Sell(Customer customer)
        {
            ShowDealerInfo();
            Console.Write("Какой продукт Вам нужен? ");
            string productName = Console.ReadLine();

            if (IsExist(productName))
            {
                int totalPrice = _products[FindProduct(productName)].Price;

                if (customer.Money >= totalPrice)
                {
                    Console.WriteLine($"С вас {totalPrice} денег.");
                    Money += totalPrice;
                    customer.Pay(totalPrice);
                    customer.Add(productName, _products[FindProduct(productName)].Price);
                    _products.RemoveAt(FindProduct(productName));

                }
                else
                {
                    Console.WriteLine("У вас недостаточно денег.");
                }


            }
            else
            {
                Console.WriteLine("Такого товара нет.");
            }
        }
        
        private int FindProduct(string productName)
        {
            int productIndex = -1;

            foreach (Product product in _products)
            {
                if(product.Name.ToLower() == productName.ToLower())
                {
                     productIndex = _products.FindIndex(product => product.Name.ToLower() == productName.ToLower());
                }
            }

            return productIndex;
        }

        private bool IsExist(string productName)
        {
            bool isExist = _products.Exists(product => product.Name.ToLower() == productName.ToLower());
            return isExist;
        }

    }

    class Customer: Human
    {
        public Customer(int money)
        {
            Money = money;
        }

        public void Add(string name, int price)
        {
            _products.Add(new Product(name, price));
        }

        public void Pay(int moneyToPay)
        {
            Money -= moneyToPay;
        }

    }

    class Product
    {
        public string Name { get; private set; }

        public int Price { get; private set; }

        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }

        public void ShowInfoForDealer()
        {
            Console.WriteLine($"В наличии имеется {Name}. Цена: {Price}.");
        }

        public void ShowInfoForBuyer()
        {
            Console.WriteLine($"В корзине находится {Name}.");
        }
    }
}
